### Proof certificate: #9
invariant [ic3po_prop1]	(forall X, Y . ((holds_lock(X) & holds_lock(Y)) -> (X = Y)))
invariant [ic3po_other9]	(forall N1, N2 . ((unlock_msg(N2) & unlock_msg(N1)) -> (N2 = N1)))
invariant [ic3po_other2]	(forall N1 . (holds_lock(N1) -> held))
invariant [ic3po_other6]	(forall N1, N2 . (holds_lock(N1) -> ~unlock_msg(N2)))
invariant [ic3po_other5]	(forall N1, N2 . (grant_msg(N1) -> ~unlock_msg(N2)))
invariant [ic3po_other7]	(forall N1, N2 . ((grant_msg(N2) & grant_msg(N1)) -> (N2 = N1)))
invariant [ic3po_other4]	(forall N1, N2 . (grant_msg(N2) -> ~holds_lock(N1)))
invariant [ic3po_other1]	(forall N1 . (grant_msg(N1) -> held))
invariant [ic3po_other3]	(forall N1 . (unlock_msg(N1) -> held))
###
