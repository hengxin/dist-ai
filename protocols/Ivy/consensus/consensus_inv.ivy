#lang ivy1.7

type quorum
type node
type value

relation member(N:node, Q:quorum)
axiom forall Q1, Q2. exists N. member(N, Q1) & member(N, Q2)

relation vote_request_msg(N1:node, N2:node)
relation voted(N:node)
relation vote_msg(N1:node, N2:node)
relation votes(N1:node, N2:node)
relation leader(N:node, Q:quorum)
relation voting_quorum(Q:quorum)
relation decided(N:node, Q:quorum, V:value)

after init {
    vote_request_msg(N1, N2) := false;
    voted(N) := false;
    vote_msg(N1, N2) := false;
    votes(N1, N2) := false;
    leader(N, Q) := false;
    decided(N, Q, V) := false;
    voting_quorum(Q) := false;
}

action send_request_vote(src: node, dst: node) = {
	vote_request_msg(N1, N2) := vote_request_msg(N1, N2) | (N1=src & N2=dst);
}

action send_vote(src: node, dst: node) = {
    require ~voted(src) & vote_request_msg(dst, src);
    vote_msg(N1, N2) := vote_msg(N1, N2) | (N1 = src & N2 = dst);
    voted(N) := voted(N) | N=src;
}

action recv_vote(n: node, sender: node) = {
    require vote_msg(sender, n);
    votes(N1, N2) := votes(N1, N2) | (N1 = n & N2 = sender);
}

action choose_voting_quorum(q: quorum, sn: node) = {
    require forall N. member(N, q) -> votes(sn, N);
    voting_quorum(Q) := Q = q;
}

action become_leader(n: node, q: quorum) = {
    require voting_quorum(q) & (member(N, q) -> votes(n, N));
    leader(N, Q) := leader(N, Q) | (N = n & Q = q);
}

action decide(n: node, q: quorum, v: value) = {
    require leader(n, q) & ~decided(n, Q, V);
    decided(N, Q, V) := decided(N, Q, V) | (N=n & Q=q & V=v);
}

export send_request_vote
export send_vote
export recv_vote
export choose_voting_quorum
export become_leader
export decide

# safety property
invariant [1000000] decided(N1, Q1, V1) & decided(N2, Q2, V2) -> V1 = V2

invariant [1000] forall Q1:quorum, N1:node, N2:node, V1:value. N1 ~= N2 -> voted(N1) | ~vote_msg(N1,N2)
invariant [1001] forall Q1:quorum, N1:node, N2:node, V1:value. N1 ~= N2 -> voted(N1) | ~votes(N2,N1)
invariant [1002] forall Q1:quorum, N1:node, N2:node, V1:value. N1 ~= N2 -> vote_request_msg(N1,N2) | ~vote_msg(N2,N1)
invariant [1003] forall Q1:quorum, N1:node, N2:node, V1:value. N1 ~= N2 -> vote_msg(N1,N2) | ~votes(N2,N1)
invariant [1004] forall Q1:quorum, N1:node, N2:node, V1:value. N1 ~= N2 -> ~votes(N1,N1) | ~votes(N2,N1)
invariant [1005] forall Q1:quorum, N1:node, N2:node, V1:value. N1 ~= N2 -> votes(N1,N2) | ~member(N2,Q1) | ~leader(N1,Q1)
invariant [1006] forall Q1:quorum, N1:node, N2:node, V1:value. N1 ~= N2 -> ~vote_msg(N1,N1) | ~vote_msg(N1,N2)
invariant [1007] forall Q1:quorum, N1:node, N2:node, V1:value. N1 ~= N2 -> ~member(N1,Q1) | ~vote_msg(N1,N2) | ~leader(N1,Q1)
invariant [1008] forall Q1:quorum, N1:node, N2:node, V1:value. N1 ~= N2 -> ~member(N1,Q1) | ~votes(N2,N1) | ~leader(N1,Q1)
invariant [1009] forall Q1:quorum, N1:node, N2:node, V1:value. N1 ~= N2 -> ~vote_msg(N1,N1) | ~votes(N2,N1)
invariant [1010] forall Q1:quorum, N1:node, N2:node, V1:value. N1 ~= N2 -> ~leader(N1,Q1) | ~leader(N2,Q1)
invariant [1011] forall Q1:quorum, N1:node, N2:node, V1:value. N1 ~= N2 -> votes(N1,N2) | ~member(N2,Q1) | ~decided(N1,Q1,V1)
invariant [1012] forall Q1:quorum, N1:node, N2:node, V1:value. N1 ~= N2 -> vote_msg(N1,N2) | ~member(N1,Q1) | ~leader(N2,Q1)
invariant [1013] forall Q1:quorum, N1:node, N2:node, V1:value. N1 ~= N2 -> voted(N1) | ~member(N1,Q1) | ~decided(N2,Q1,V1)
invariant [1014] forall Q1:quorum, N1:node, N2:node, V1:value. N1 ~= N2 -> ~leader(N1,Q1) | ~decided(N2,Q1,V1)
invariant [1015] forall Q1:quorum, N1:node, N2:node, V1:value. N1 ~= N2 -> ~decided(N1,Q1,V1) | ~decided(N2,Q1,V1)
invariant [1016] forall Q1:quorum, N1:node, N2:node, V1:value. N1 ~= N2 -> vote_request_msg(N1,N2) | ~votes(N1,N2)
invariant [1017] forall Q1:quorum, N1:node, N2:node, V1:value. N1 ~= N2 -> vote_request_msg(N1,N2) | ~member(N2,Q1) | ~leader(N1,Q1)
invariant [1018] forall Q1:quorum, N1:node, N2:node, V1:value. N1 ~= N2 -> voted(N1) | ~member(N1,Q1) | ~leader(N2,Q1)
invariant [1019] forall Q1:quorum, N1:node, N2:node, V1:value. N1 ~= N2 -> vote_request_msg(N1,N2) | ~member(N2,Q1) | ~decided(N1,Q1,V1)
invariant [1020] forall Q1:quorum, N1:node, N2:node, V1:value. N1 ~= N2 -> ~vote_msg(N1,N2) | ~votes(N1,N1)
invariant [1021] forall Q1:quorum, N1:node, N2:node, V1:value. N1 ~= N2 -> ~member(N1,Q1) | ~votes(N1,N1) | ~leader(N2,Q1)
invariant [1022] forall Q1:quorum, N1:node, N2:node, V1:value. N1 ~= N2 -> ~member(N1,Q1) | ~vote_msg(N1,N1) | ~decided(N2,Q1,V1)
invariant [1023] forall Q1:quorum, N1:node, N2:node, V1:value. N1 ~= N2 -> ~member(N1,Q1) | ~votes(N2,N1) | ~decided(N1,Q1,V1)
invariant [1024] forall Q1:quorum, N1:node, N2:node, V1:value. N1 ~= N2 -> ~member(N1,Q1) | ~vote_msg(N1,N2) | ~decided(N1,Q1,V1)
invariant [1025] forall Q1:quorum, N1:node, N2:node, V1:value. N1 ~= N2 -> ~member(N1,Q1) | ~votes(N1,N1) | ~decided(N2,Q1,V1)
invariant [1026] forall Q1:quorum, N1:node, N2:node, V1:value. N1 ~= N2 -> vote_msg(N1,N2) | ~member(N1,Q1) | ~decided(N2,Q1,V1)
invariant [1027] forall Q1:quorum, N1:node, N2:node, V1:value. N1 ~= N2 -> ~member(N1,Q1) | ~vote_msg(N1,N1) | ~leader(N2,Q1)
invariant [2000] forall Q1:quorum, N1:node, V1:value. vote_request_msg(N1,N1) | ~vote_msg(N1,N1)
invariant [2001] forall Q1:quorum, N1:node, V1:value. vote_request_msg(N1,N1) | ~member(N1,Q1) | ~decided(N1,Q1,V1)
invariant [2002] forall Q1:quorum, N1:node, V1:value. voted(N1) | ~vote_msg(N1,N1)
invariant [2003] forall Q1:quorum, N1:node, V1:value. voted(N1) | ~member(N1,Q1) | ~leader(N1,Q1)
invariant [2004] forall Q1:quorum, N1:node, V1:value. leader(N1,Q1) | ~decided(N1,Q1,V1)
invariant [2005] forall Q1:quorum, N1:node, V1:value. voted(N1) | ~votes(N1,N1)
invariant [2006] forall Q1:quorum, N1:node, V1:value. voted(N1) | ~member(N1,Q1) | ~voting_quorum(Q1)
invariant [2007] forall Q1:quorum, N1:node, V1:value. votes(N1,N1) | ~member(N1,Q1) | ~leader(N1,Q1)
invariant [2008] forall Q1:quorum, N1:node, V1:value. vote_msg(N1,N1) | ~member(N1,Q1) | ~leader(N1,Q1)
invariant [2009] forall Q1:quorum, N1:node, V1:value. vote_request_msg(N1,N1) | ~votes(N1,N1)
invariant [2010] forall Q1:quorum, N1:node, V1:value. voted(N1) | ~member(N1,Q1) | ~decided(N1,Q1,V1)
invariant [2011] forall Q1:quorum, N1:node, V1:value. vote_msg(N1,N1) | ~votes(N1,N1)
invariant [2012] forall Q1:quorum, N1:node, V1:value. vote_request_msg(N1,N1) | ~member(N1,Q1) | ~leader(N1,Q1)
invariant [2013] forall Q1:quorum, N1:node, V1:value. vote_msg(N1,N1) | ~member(N1,Q1) | ~decided(N1,Q1,V1)
invariant [2014] forall Q1:quorum, N1:node, V1:value. votes(N1,N1) | ~member(N1,Q1) | ~decided(N1,Q1,V1)
invariant [3000] forall N1:node, N2:node, N3:node. N2 ~= N3 -> ~vote_msg(N1,N2) | ~vote_msg(N1,N3)
invariant [3001] forall N1:node, N2:node, N3:node. N1 ~= N3 -> ~votes(N1,N2) | ~votes(N3,N2)
